/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewOrder.java
 *
 * Created on Jul 27, 2015, 3:56:21 PM
 */

package workers;

import gayakwad.DBConnection;
import gayakwad.NewDesing;
import java.sql.ResultSet;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import raw.ProductDesing;
import raw.RowItem;


import java.sql.Connection;
import java.sql.DriverManager;
import com.implidea.DecimalFormat;
import java.util.HashMap;
import javax.swing.UIManager;

//import net.sf.jasperreports.engine.JasperFillManager;
//import net.sf.jasperreports.engine.JasperPrint;
//import net.sf.jasperreports.engine.JasperPrintManager;
//import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author admin
 */
public class NewOrder extends javax.swing.JFrame {


    Vector<ProductDesing> orderDetails;
    /** Creates new form NewOrder */
    public NewOrder() {
        super();
           
            try{
                initComponents();
                suggesion();
                orderDetails = new Vector<ProductDesing>();
            }catch(Exception e){
                e.printStackTrace();
            }
            java.awt.Dimension dim = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
            this.setLocation(dim.width/2-this.getSize().width/2, 0);

    }
WorkerObj[] wo;
ProductDesing[] desings;
RowItem[] rt;
    private void suggesion(){
        try {
                DBConnection con = new DBConnection();

                ResultSet rs = con.executeQuery("SELECT count(name) FROM worker_mst;");
                rs.next();
                wo = new WorkerObj[rs.getInt(1)];

                rs = con.executeQuery("SELECT wid,name FROM worker_mst;");
                int i=0;
                    while (rs.next()) {
                        wo[i] = new WorkerObj();
                        wo[i].id = rs.getString(1);
                        wo[i].name = rs.getString(2);
                        i++;
                    }

                    rs = con.executeQuery("SELECT count(*) FROM design_mst;");
                    rs.next();
                    desings = new ProductDesing[rs.getInt(1)];

                    rs = con.executeQuery("SELECT * FROM design_mst;");
                    i = 0;
                    while (rs.next()) {
                        int code = rs.getInt(1);
                        String name = rs.getString(2);
                        String req = rs.getString(3);
                        //Mani 2::14::92.60::1589.0&&

                        /*
                         * Raw_name::Qnty for desing::tounch::wt
                         */


                        //Mani Plane 2456::17::2456.0&&Mani Checks 2478::2::2478.0&&
                        String[] sp1 = req.split("&&");
                        rt = new RowItem[sp1.length];
                        int j=0;
                        for(String sspp : sp1){
                           // System.out.println(sspp);
                            String[] sp2 = sspp.split("::");
                            rt[j] = new RowItem(sp2[0], Float.parseFloat(sp2[3]),Float.parseFloat(sp2[2]));
                            rt[j].qnty = Integer.parseInt(sp2[1]);
                            j++;
                        }

                        desings[i] = new ProductDesing(code, name, rt);
                        i++;
                    }

                    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(desings));
                    jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(wo));
                    jComboBox1.setSelectedIndex(0);
                    jComboBox1ItemStateChanged(null);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(240, 240, 240));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24));
        jLabel1.setText("New Order Entry");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addComponent(jLabel1)
                .addContainerGap(331, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Design Name:");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Row Material:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Material", "Tounch", "Weight", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Add Order (Ctrl+O)");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Place Order (Ctrl+T)");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Total Weight For Design:");

        jButton3.setText("Delete (Ctrl+D)");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Design", "Weight", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Quantity");

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jComboBox1KeyTyped(evt);
            }
        });

        jButton4.setText("View Material (Ctrl+M)");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("View Print (Ctrl+N)");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("+");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Save");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Reset (Ctrl+R)");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                        .addGap(14, 14, 14))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(23, 23, 23)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(31, 31, 31))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Worker Name");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jComboBox2KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu3.setText("Options");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Add Order");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("View Material");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("View Print");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Place Order");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setText("Delete");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Reset");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("Exit");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Add Order Button
        addOrder();
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Place Order btn
        placeOrder();
}//GEN-LAST:event_jButton2ActionPerformed


    private void placeOrder(){
        try {
                loadFinalMaterial();
                //check material status...
                DBConnection con = new DBConnection();
                
                    
                    
                    for(FinalMaterial ffmm : fm){
                        String qry = "SELECT qnty FROM raw_stock_mst where name='"+ffmm.raw_name+"' and wt="+ffmm.wt+" and tounch="+ffmm.tounch;
                        System.out.println(qry);
                         ResultSet rs = con.executeQuery(qry);
                         if(rs.next()){
                            String qStr = rs.getString(1);
                            int qnty = Integer.parseInt(qStr);
                            System.out.println(ffmm.raw_name+"["+qnty+"]");
                            if(qnty<ffmm.qnty){
                                JOptionPane.showMessageDialog(rootPane, "Stock For "+ffmm.raw_name+" (wt:"+ffmm.wt+") Not Available","Alert",JOptionPane.WARNING_MESSAGE);
                                return;
                            }
                         }else{
                                JOptionPane.showMessageDialog(rootPane, "Stock For "+ffmm.raw_name+" (wt:"+ffmm.wt+")  Not Available","Alert",JOptionPane.WARNING_MESSAGE);
                                return;
                         }
                     }
 
                //add to conferm order.
                int new_order_id = 1;
                ResultSet rs = con.executeQuery("SELECT max(order_id) FROM confermorder");
                if(rs.next())
                    new_order_id = rs.getInt(1)+1;


                String nm = ((WorkerObj) jComboBox2.getSelectedItem()).id;
                for(ProductDesing pd : orderDetails){
                    String requ = "";
                    for(RowItem ri : pd.raw){
                        requ+=ri.toDBString()+"&&";
                    }
                    con.executeUpdate("insert into confermOrder values ("+new_order_id+",'"+pd.name+"',"+pd.qnty+",'"+requ+"')");
                }

                for(FinalMaterial ffmm : fm){
                    con.executeUpdate("insert into confermOrderMaterial values ("+new_order_id+",'"+ffmm.raw_name+"',"+ffmm.qnty+","+ffmm.wt+","+ffmm.tounch+")");
                    //deduct..
                    con.executeUpdate("update raw_stock_mst set qnty=qnty-"+ffmm.qnty+" where name='"+ffmm.raw_name+"' and wt="+ffmm.wt+" and tounch="+ffmm.tounch);
                }

                con.executeUpdate("insert into order_to_worker_map values('"+nm+"',"+new_order_id+")");


                JOptionPane.showMessageDialog(rootPane, "Order Place!");
                
                printChalan();
                dispose();
        } catch (Exception ex) {
            Logger.getLogger(NewOrder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // delete btn..
        deleteOrderEntry();
}//GEN-LAST:event_jButton3ActionPerformed


    private void deleteOrderEntry(){
        int index = jTable2.getSelectedRow();
        if(index<0) return;
        orderDetails.remove(index);
        refreshOrderTable();
    }

    private void resetAll(){
        fm=new Vector<FinalMaterial>();
        orderDetails = new Vector<ProductDesing>();
        refreshOrderTable();
        jComboBox2.requestFocus();
    }
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // add order Menu
       addOrder();
}//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // Place ORdre Menu
        placeOrder();
}//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
       resetAll();
}//GEN-LAST:event_jMenuItem3ActionPerformed

    DecimalFormat df = new DecimalFormat("######.###");
    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // jcombo desing item chanage
        int index = jComboBox1.getSelectedIndex();
        RowItem[] itm = desings[index].raw;
        String[][] data = new String[itm.length][];
        float wt = 0;
        for(int i=0;i<itm.length;i++){
            data[i] = new String[]{itm[i].name,""+itm[i].tounch,""+itm[i].wt,""+itm[i].qnty};
            wt = wt+(itm[i].wt*itm[i].qnty);
           // System.out.println(""+itm[i].wt+"*"+itm[i].qnty+"="+(itm[i].wt*itm[i].qnty));
          //  System.out.println(""+wt);
        }

        jLabel7.setText("Total Weight For Design:"+df.format(wt/1000)+" gm");
        jTable1.setModel(new javax.swing.table.DefaultTableModel(data,
            new String [] {
                "Material","Tounch", "Weight", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyTyped
        // jcombo 1 key
        char key = evt.getKeyChar();
        if(key=='\n'){
            jTextField3.requestFocus();
        }
    }//GEN-LAST:event_jComboBox1KeyTyped

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // View order btn
        displayMaterail();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        // qnty key
        char key = evt.getKeyChar();
        if(key=='\n'){
            addOrder();
            jComboBox1.requestFocus();
        }
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // View order menu
        displayMaterail();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // View PRint bnt
        viewOrder();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // View Print Menu
        viewOrder();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // exit
        dispose();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // Add new Desing..
        try{
            setVisible(false);
            new NewDesing(this).setVisible(true);
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error:"+e);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jComboBox2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox2KeyTyped
        // TODO add your handling code here:
        char key = evt.getKeyChar();
        if(key=='\n'){
            jComboBox1.requestFocus();
        }
    }//GEN-LAST:event_jComboBox2KeyTyped

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // Edit desing.
        ProductDesing pd = (ProductDesing) jComboBox1.getSelectedItem();
      
        //read modified entries from table..
        TableModel tm = jTable1.getModel();
        int rows = jTable1.getRowCount();

        RowItem[] rm = new  RowItem[rows];
        for(int i=0;i<rows;i++){
            rm[i] = new RowItem(""+tm.getValueAt(i, 0),
                                    Float.parseFloat(""+tm.getValueAt(i, 2)),
                                    Float.parseFloat(""+tm.getValueAt(i, 1)));
            
            rm[i].qnty=Integer.parseInt(""+tm.getValueAt(i, 3));
            System.out.println("Table Read:"+rm[i].toDBString());
        }

        pd.raw=rm;
        jComboBox1ItemStateChanged(null);
}//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // reset btn..
        resetAll();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // Delete menu..
        
        deleteOrderEntry();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        // reset menu..
        resetAll();
    }//GEN-LAST:event_jMenu3ActionPerformed


    public void setNewDesing(){

        try{
                    ResultSet rs = new DBConnection().executeQuery("SELECT count(*) FROM design_mst;");
                    rs.next();
                    desings = new ProductDesing[rs.getInt(1)];
                    rs = new DBConnection().executeQuery("SELECT * FROM design_mst;");
                    int i = 0;
                    while (rs.next()) {
                        int code = rs.getInt(1);
                        String name = rs.getString(2);
                        String req = rs.getString(3);
                        //Mani 2::14::92.60::1589.0&&
                        //Mani Plane 2456::17::2456.0&&Mani Checks 2478::2::2478.0&&
                        String[] sp1 = req.split("&&");
                        rt = new RowItem[sp1.length];
                        int j=0;
                        for(String sspp : sp1){
                            System.out.println(sspp);
                            String[] sp2 = sspp.split("::");
                            rt[j] = new RowItem(sp2[0], Float.parseFloat(sp2[3]),Float.parseFloat(sp2[2]));
                            rt[j].qnty = Integer.parseInt(sp2[1]);
                            j++;
                        }

                        desings[i] = new ProductDesing(code, name, rt);
                        i++;
                    }

                    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(desings));
                    //jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(wo));
                    jComboBox1.setSelectedIndex(desings.length-1);
                    jComboBox1ItemStateChanged(null);
                    jTextField3.requestFocus();
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error:"+e);
        }
    }

    private void loadFinalMaterial(){
        if(fm!=null)    return;
        
        extra = new Vector<FinalMaterial>();
        fm = new Vector<FinalMaterial>();
            for(ProductDesing pd : orderDetails){
                RowItem[] ri = pd.raw;
                for(RowItem o : ri){

                    boolean found = false;
                    for(FinalMaterial ffmm : fm){
                        if(ffmm.raw_name.toLowerCase().equals(o.name.toLowerCase()) && ffmm.wt==o.wt && ffmm.tounch==o.tounch){
                            ffmm.qnty+= ( o.qnty * pd.qnty );
                            found=true;
                            break;
                        }
                    }
                    if(!found){
                        FinalMaterial frm = new FinalMaterial(o.name, (o.qnty*pd.qnty));
                        frm.wt = o.wt;
                        frm.tounch=o.tounch;
                        fm.add(frm);
                    }
                }
            }

    }
Vector<FinalMaterial> fm = null;
Vector<FinalMaterial> extra = null;

    private void displayMaterail()
    {
            int i=1;

            loadFinalMaterial();
            String[][] data = new String[fm.size()][];
            
            i=0;
            for(FinalMaterial ffmm : fm){
                  data[i] = new String[4];
                  data[i][0] = ffmm.raw_name;
                  data[i][1] = ""+ffmm.wt;
                  data[i][2] = ""+ffmm.tounch;
                  data[i][3] = ""+ffmm.qnty;
                  i++;
            }
             OrderRequirements or = new OrderRequirements(this, true);
             //or.setData(data);
             or.setVisible(true);
             FinalMaterial[] afterModi = or.getModifiedFinalMaterial();
             if(afterModi!=null){
                 while(fm.size()>0)
                     fm.remove(0);
                 for(FinalMaterial f1m1 : afterModi)
                     fm.add(f1m1);
            }
    }
    private void viewOrder(){
        try {
            //save order details to current table...
            DBConnection con = new DBConnection();
            con.executeUpdate("delete from currentOrder");
            con.executeUpdate("delete from currentOrderMaterial");
            int i=1;
            for(ProductDesing pd : orderDetails){
                con.executeUpdate("insert into currentOrder values ("+i+",'"+pd.name+"',"+pd.qnty+")");
                i++;
            }


            loadFinalMaterial();

            i=1;
            for(FinalMaterial ffmm : fm){
                con.executeUpdate("insert into currentOrderMaterial values ("+i+",'"+ffmm.raw_name+"',"+ffmm.qnty+")");
                i++;
            }

            //show report
            showViewReport();
            
        } catch (Exception ex) {
            Logger.getLogger(NewOrder.class.getName()).log(Level.SEVERE, null, ex);
        }


    }



 private static void showViewReport() {
      HashMap hm = null;
      //HashMap<String,String> hm = null.
      // System.out.println("Usage: ReportGenerator ....");

      try {
           System.out.println("Start ....");
           String jasperFileName = "Orders.jasper";
            System.out.println("Start ....");

           hm = new HashMap();
//           JasperPrint jprint = (JasperPrint) JasperFillManager.fillReport(jasperFileName, hm, new DBConnection().getConnection());
//           JasperViewer.viewReport(jprint,false);
           
           System.out.println("Done exporting reports to pdf");

      } catch (Exception e) {
           System.out.print("Exceptiion" + e);
           e.printStackTrace();
      }
 }



 private static void printChalan() {
      HashMap hm = null;
      //HashMap<String,String> hm = null.
      // System.out.println("Usage: ReportGenerator ....");

      try {
           System.out.println("Start ....");
           String jasperFileName = "Orders.jasper";
            System.out.println("Start ....");

           hm = new HashMap();
//           JasperPrint jprint = (JasperPrint) JasperFillManager.fillReport(jasperFileName, hm, new DBConnection().getConnection());
//           JasperViewer.viewReport(jprint,false);
//           JasperPrintManager.printPage(jprint, 0, false);
           System.out.println("Done exporting reports to pdf");

      } catch (Exception e) {
           System.out.print("Exceptiion" + e);
           e.printStackTrace();
      }
 }


    private void addOrder(){
        fm=null;
        int index = jComboBox1.getSelectedIndex();
        String name = desings[index].name;
        int code = desings[index].code;
        String qq = jTextField3.getText();
        int pQnty = 0;
        try{
            pQnty = Integer.parseInt(qq);
        }catch(Exception e){
              JOptionPane.showMessageDialog(rootPane, "Incorrect Value For Quantity", "Error", JOptionPane.ERROR_MESSAGE);
              return;
        }
        int rC = jTable1.getRowCount();
        //int cC = jTable1.getColumnCount();
        /*TableModel tm = jTable1.getModel();
        RowItem[] rt = new RowItem[rC];
        for(int i=0;i<rC;i++){
            String rN = (String) tm.getValueAt(i, 0);
            String rT = (String) tm.getValueAt(i, 1);
            String rW = (String) tm.getValueAt(i, 2);
            String rQnty = (String) tm.getValueAt(i, 3);


            float w=0,tnch=0;
            int q=0;

             try{
                tnch = Float.parseFloat(rT);
            }catch(Exception e){
                JOptionPane.showMessageDialog(rootPane, "Incorrect Value For Tounch", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }



            try{
                w = Float.parseFloat(rW);
            }catch(Exception e){
                JOptionPane.showMessageDialog(rootPane, "Incorrect Value For Weight", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try{
                q = Integer.parseInt(rQnty);
            }catch(Exception e){
                JOptionPane.showMessageDialog(rootPane, "Incorrect Value For Quantity", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            rt[i] = new RowItem(rN, tnch,w);
            rt[i].qnty=q;
        }
         *
         */
        
        ProductDesing pd =new ProductDesing(code, name, desings[index].raw);
        pd.qnty=pQnty;
        orderDetails.add(pd);
        refreshOrderTable();
    }


    private void refreshOrderTable(){
        String[][] data = new String[orderDetails.size()][];
        for(int i=0;i<data.length;i++){
                data[i] = new String[3];
                ProductDesing pd = orderDetails.get(i);
                data[i][0] = pd.name;
                data[i][1] = ""+df.format(pd.getFinalWeight()/1000);
                data[i][2] = ""+pd.qnty;
            }

         jTable2.setModel(new javax.swing.table.DefaultTableModel(data,
            new String [] {
                "Design", "Weight", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewOrder dialog = new NewOrder();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

}
