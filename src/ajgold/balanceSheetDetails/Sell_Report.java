/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Sell_Report.java
 *
 * Created on Oct 31, 2015, 10:56:43 AM
 */

package ajgold.balanceSheetDetails;

import com.implidea.DecimalFormat;
import gayakwad.DBConnection;
import gayakwad.invoices.AllInvoices;
import java.awt.Frame;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import sale.CustomerObj;
import sale.ProductDetails;
import stock.Product;
import ui.DatePickerDialog;

/**
 *
 * @author Implidea
 */
public class Sell_Report extends javax.swing.JDialog {

    Frame parent;
    /** Creates new form Sell_Report */
    public Sell_Report(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parent=parent;
        initComponents();
         java.awt.Dimension dim = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
         this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getHeight()/2);

        try {
            loadAllAllCust();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(jPanel1, ex);
        }
        //loadSellReport("", "", -1);
         reset();
    }
 CustomerObj[] co;

    private void loadAllAllCust() throws Exception
    {
         DBConnection con = new DBConnection();
            ResultSet rs = con.executeQuery("SELECT count(*) FROM customer_mst;");
            rs.next();
            int count = rs.getInt(1);
            co = new CustomerObj[count+1];
            rs = con.executeQuery("SELECT * FROM customer_mst;");
            co[0] = new CustomerObj(-1, "All Customers", "", "", 0, 0, 0, 0);
            int i=1;
            while(rs.next()){
                int cid = rs.getInt(1);
                String name = rs.getString(2);
                String address = rs.getString(3);
                String contact = rs.getString(4);
                float base_tounch = rs.getFloat(5);
                float base_labor = rs.getFloat(6);
                float gold_ac = rs.getFloat(7);
                float money_ac = rs.getFloat(8);
                co[i] = new CustomerObj(cid, name, address, contact, base_tounch, base_labor, gold_ac, money_ac);
                i++;
            }

            jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(co));
            jComboBox3.setSelectedIndex(0);
            jComboBox3ItemStateChanged(null);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("****Sell Report****");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(273, 273, 273)
                .addComponent(jLabel1)
                .addContainerGap(326, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("From");

        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jTextField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField2MouseClicked(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("To");

        jTable1.setFont(new java.awt.Font("Batang", 0, 12));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Barcode", "Product Name", "Weight", "Tounch", "Invoice No.", "Customer Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });
        jComboBox3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jComboBox3KeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Customer Name:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Thusi 75:-");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Total");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Weight");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Fine");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Total");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Weight");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Fine");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Thusi 92:-");

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton1.setText("Reset (Ctrl+R)");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Total");

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Total");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Weight");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Fine");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(200, 200, 200)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16))))
                        .addGap(53, 53, 53))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(jComboBox3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel13))
                                    .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel10))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14)
                                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel17)))))
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Reset");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Exit");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     String frmDate="",toDate="";
    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        // from date


        DatePickerDialog dpd = new DatePickerDialog(parent, true);
        dpd.setVisible(true);

        String sd = dpd.SELECTED_DATE;
        if(sd==null || sd.length()<1){
            //jTextField2.requestFocus();
            Date selectedDay = new Date();
            sd =  "";//+(selectedDay.getYear()+1900)+"-"+(selectedDay.getMonth()+1)+"-"+(selectedDay.getDate());
        }
        frmDate = sd;
        jTextField1.setText(dpd.SELECTED_DATE_display);
        try {

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, ex);
        }


 

}//GEN-LAST:event_jTextField1MouseClicked

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        try {
            // TODO add your handling code here:
            //frm date..
            char ch = evt.getKeyChar();
            if (ch == '\n') {
                //loadSellReport(frmDate, toDate, ((CustomerObj) jComboBox3.getSelectedItem()).cid);
                
                reset();
            }
        } catch (Exception ex) {

            ex.printStackTrace();
            JOptionPane.showMessageDialog(parent, ex);
        }
}//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField2MouseClicked
        // To date

        
        DatePickerDialog dpd = new DatePickerDialog(parent, true);
        dpd.setVisible(true);

        System.out.println(dpd.SELECTED_DATE);
        System.out.println(dpd.SELECTED_DATE_display);
        String sd = dpd.SELECTED_DATE;
        if(sd==null || sd.length()<1){
            //jTextField2.requestFocus();
            //Date selectedDay = new Date();
            sd =  "";//+(selectedDay.getYear()+1900)+"-"+(selectedDay.getMonth()+1)+"-"+(selectedDay.getDate());
        }
        toDate = sd;
        jTextField2.setText(dpd.SELECTED_DATE_display);
        try {
            
        } catch (Exception ex) {
            ex.printStackTrace();;
            JOptionPane.showMessageDialog(parent, ex);
        }
    }//GEN-LAST:event_jTextField2MouseClicked

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        // c name combo item
        CustomerObj cust_obj = (CustomerObj) jComboBox3.getSelectedItem();
       // jTextField1.setText(""+cust_obj.base_tounch);
       // jTextField2.setText(""+cust_obj.base_labor);
}//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jComboBox3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox3KeyTyped
        // c name key
        if(evt.getKeyChar()!='\n')  return;
        
        //loadSellReport(frmDate, toDate, ((CustomerObj) jComboBox3.getSelectedItem()).cid);
        reset();
        
    }//GEN-LAST:event_jComboBox3KeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
         if(evt.getClickCount()==2){
             if(showing_main)
                    showDetails();
             else{
                 int r = jTable1.getSelectedRow();
                 int clm = jTable1.getSelectedColumn();
                 TableModel tm = jTable1.getModel();
                 switch(clm){
                     case 0: //barcode
                         showProductDetails();
                         break;

                     case 3:    //inv no
                         String inv_no = ""+tm.getValueAt(r, clm);
                         AllInvoices al = new AllInvoices(parent, true);
                         al.openInvoice(Integer.parseInt(inv_no));
                         al.setVisible(true);
                         break;

                     case 4:
                            int pr = r-1;
                            Product pp = current_sr.allProd.get(pr);
                             al = new AllInvoices(parent, true);
                             al.loadInvoicesForCustomer(pp.cid);
                             al.setVisible(true);
                         break;
                 }



             }
                 
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // TODO add your handling code here:
         try {
            // TODO add your handling code here:
            //frm date..
            char ch = evt.getKeyChar();
            if (ch == '\n') {
               //loadSellReport(frmDate, toDate, ((CustomerObj) jComboBox3.getSelectedItem()).cid);
                reset();
            }
        } catch (Exception ex) {
            ex.printStackTrace();;
            JOptionPane.showMessageDialog(parent, ex);
        }
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // reset
        reset();
    }//GEN-LAST:event_jMenuItem1ActionPerformed


    private void reset(){
        Date today = new Date();
        String fd = jTextField1.getText();
        String td = jTextField2.getText();
        if(fd.length()>1){
            String[] ddmmyyy = fd.split("-");
            if(ddmmyyy.length!=3){
                JOptionPane.showMessageDialog(rootPane, "Wrong From Date!");
                return;
            }
            frmDate = ddmmyyy[2]+"-"+ddmmyyy[1]+"-"+ddmmyyy[0];
        }else{

            jTextField1.setText("01-"
                                 +((today.getMonth()+1)<=9 ? "0"+(today.getMonth()+1) : ""+(today.getMonth()+1) )+"-"
                                 +(today.getYear()+1900));
            frmDate = today.getYear()+1900+"-"+(today.getMonth()+1)+"-1";


        }
        if(td.length()>1){
            String[] ddmmyyy = td.split("-");
            if(ddmmyyy.length!=3){
                JOptionPane.showMessageDialog(rootPane, "Wrong To Date!");
                return;
            }
            toDate = ddmmyyy[2]+"-"+ddmmyyy[1]+"-"+ddmmyyy[0];
        }else{
             jTextField2.setText(""+(today.getDate()<=9 ? "0"+today.getDate() : ""+today.getDate() )+"-"
                                 +((today.getMonth()+1)<=9 ? "0"+(today.getMonth() +1): ""+(today.getMonth()+1) )+"-"
                                 +(today.getYear()+1900));
           toDate = (today.getYear()+1900)+"-"+(today.getMonth()+1)+"-"+today.getDate();
        }
        loadSellReport(frmDate, toDate, ((CustomerObj) jComboBox3.getSelectedItem()).cid);
    }

    boolean showing_main = false;
    SellReport current_sr = null;
    private void showDetails(){
        int row = jTable1.getSelectedRow();
        if(row<0){
            return;
        }
        if(product_wise_report==null)
            return;
         int tushi_75_count=0,tusi_92_count=0;
        float tusi_92_wt=0,tushi_92_fine=0;
        float tusi_75_wt=0,tushi_75_fine=0;
            
        SellReport sr = product_wise_report.get(row);
        current_sr = sr;
        int size = sr.allProd.size();
        String[][] data = new String[size+1][];
        data[0] = new String[]{sr.product_name,"","","",""};
        for(int i=0;i<size;i++){
            Product pp = sr.allProd.get(i);

            if(sr.product_name.contains("-92")){
                     tusi_92_count++;
                     tusi_92_wt+=pp.wt;
                     tushi_92_fine+=(pp.wt*pp.tounch/100);
                 }
                 else{
                     tushi_75_count++;
                     tusi_75_wt+=pp.wt;
                     tushi_75_fine+=(pp.wt*pp.tounch/100);
                 }

            
            data[i+1] = new String[]{
                            pp.barcode,
                            df_gold.format(pp.wt),
                            df_gold.format((pp.wt*pp.tounch/100)),
                            ""+pp.invoice_no_if_selled,
                            pp.cname
                        };
        }


            int total_count = tushi_75_count+tusi_92_count;
            float total_wt = tusi_75_wt+tusi_92_wt;
            float total_fine = tushi_75_fine+tushi_92_fine;

            jLabel8.setText("Total:  "+tushi_75_count);
            jLabel9.setText("Weight:  "+df_gold.format(tusi_75_wt));
            jLabel10.setText("Fine  "+df_gold.format(tushi_75_fine));


            jLabel11.setText("Total:  "+tusi_92_count);
            jLabel12.setText("Weight:  "+df_gold.format(tusi_92_wt));
            jLabel13.setText("Fine:  "+df_gold.format(tushi_92_fine));


            jLabel15.setText("Total:  "+total_count);
            jLabel16.setText("Weight:  "+df_gold.format(total_wt));
            jLabel17.setText("Fine:  "+df_gold.format(total_fine));
            

         jTable1.setModel(new javax.swing.table.DefaultTableModel(data,
            new String [] {
                "Barcode", "Weight", "Fine", "Invoice No.", "Customer Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        showing_main = false;
        



    }


     private void showProductDetails(){
        int row = jTable1.getSelectedRow();
        if(row<0){
            return;
        }
        TableModel tm = jTable1.getModel();
        System.out.println("["+tm.getValueAt(row, 0)+"]["+tm.getValueAt(row, 1)+"]");
        new ProductDetails(parent, true, ""+tm.getValueAt(row, 0)).setVisible(true);
    }
Vector<SellReport> product_wise_report = null;

    private void loadSellReport(String frmdate,String todate,int cid){
          if(frmdate.length()<1)
          {
              Date dt = new Date();
              frmdate=""+(dt.getYear()+1900)+"-"+(dt.getMonth()+1)+"-1";
              jTextField1.setText("1-"+(dt.getMonth()+1)+"-"+(dt.getYear()+1900));
          }
          if(todate.length()<1)
          {
              Date dt = new Date();
              todate=""+(dt.getYear()+1900)+"-"+(dt.getMonth()+1)+"-"+(1+dt.getDate());
              jTextField2.setText(dt.getDate()+"-"+(dt.getMonth()+1)+"-"+(dt.getYear()+1900));
          }


          String condision = "dt>='"+frmdate+" 0:0:0' and dt<='"+todate+" 23:59:59' ";

          String qry1 = "SELECT count(*) FROM sell_report_details where "+condision;
          String qry2 = "SELECT * FROM sell_report_details where "+condision ;
          
          if(cid>0)
          {
              qry1 = "SELECT count(*) FROM sell_report_details where "+condision+" and cid=" + cid;
              qry2 = "SELECT * FROM sell_report_details where "+condision+" and cid=" + cid;
          }
        try {
            ResultSet rs = new DBConnection().executeQuery(qry1);
            int r_count = 0;
            if(rs.next()){
                try{
                    r_count = rs.getInt(1);
                }catch(Exception e){
                    r_count = 0;
                    e.printStackTrace();
                }
            }
            product_wise_report = new Vector<SellReport>();
            String[][] data = new String[r_count][];
            rs = new DBConnection().executeQuery(qry2);
            int index = 0;
            int tushi_75_count=0,tusi_92_count=0;
            float tusi_92_wt=0,tushi_92_fine=0;
            float tusi_75_wt=0,tushi_75_fine=0;
            while(rs.next()){
                 data[index] = new String[6];
                 String code = rs.getString(1);
                 data[index][0] = code;
                 String name = rs.getString(2);
                 data[index][1] = name;
                 float wt = rs.getFloat(3);
                 float tnch = rs.getFloat(4);
                 float lbr = rs.getFloat(5);

                 data[index][2] = ""+wt;
                 data[index][3] = ""+tnch;
                 int cid_rs = rs.getInt(6);  //cust id.
                 rs.getDate(7);
                 String cname = rs.getString(8);  //cust name
                 data[index][4] = cname;
                 int inv_no = rs.getInt(9);
                 data[index][5] = ""+inv_no;  //inv no
                 index++;

                 if(name.contains("-92")){
                     tusi_92_count++;
                     tusi_92_wt+=wt;
                     tushi_92_fine+=(wt*tnch/100);
                 }
                 else{
                     tushi_75_count++;
                     tusi_75_wt+=wt;
                     tushi_75_fine+=(wt*tnch/100);
                 }
                 Product pp = new Product(code, name, wt, "NA");
                 pp.cid=cid_rs;
                 pp.invoice_no_if_selled =inv_no;
                 pp.tounch = tnch;
                 pp.cname = cname;
                 
                 boolean found = false;
                 for(SellReport sr  : product_wise_report)
                 {
                     if(sr.product_name.equals(pp.name))
                     {
                         found=true;
                         sr.allProd.add(pp);
                         break;
                     }
                 }
                 if(!found)
                 {
                     SellReport sr = new SellReport(name);
                     sr.allProd.add(pp);
                     product_wise_report.add(sr);
                 }
             }

            int res_size = product_wise_report.size();
            data = new String[res_size][];
            for(int i=0;i<res_size;i++){
                SellReport sr = product_wise_report.get(i);
                data[i] = new String[]{
                            sr.product_name,
                            ""+sr.allProd.size(),
                            df_gold.format(sr.getTotalWt()),
                            df_gold.format(sr.getTotalFine())
                        };

            }
            
            int total_count = tushi_75_count+tusi_92_count;
            float total_wt = tusi_75_wt+tusi_92_wt;
            float total_fine = tushi_75_fine+tushi_92_fine;
            
            jLabel8.setText("Total:  "+tushi_75_count);
            jLabel9.setText("Weight:  "+df_gold.format(tusi_75_wt));
            jLabel10.setText("Fine:  "+df_gold.format(tushi_75_fine));


            jLabel11.setText("Total:  "+tusi_92_count);
            jLabel12.setText("Weight:  "+df_gold.format(tusi_92_wt));
            jLabel13.setText("Fine:  "+df_gold.format(tushi_92_fine));


            jLabel15.setText("Total:  "+total_count);
            jLabel16.setText("Weight:  "+df_gold.format(total_wt));
            jLabel17.setText("Fine:  "+df_gold.format(total_fine));


             jTable1.setModel(new javax.swing.table.DefaultTableModel(data,
            new String [] {
                "Product Name", "Quntity", "Weight", "Fine"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });


        showing_main = true;


        } catch (Exception ex) {
            Logger.getLogger(Sell_Report.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    DecimalFormat df_gold = new DecimalFormat("########.###");
    DecimalFormat df_money = new DecimalFormat("########");


    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Sell_Report dialog = new Sell_Report(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

}


class SellReport{
    public final Vector<Product> allProd = new Vector<Product>();
    final String product_name;
    public SellReport(String pname){
        this.product_name=pname;
    }


    public float getTotalWt(){
        float ret = 0;
        for(Product pp :allProd)
            ret+= pp.wt;
        return ret;
    }

    public float getTotalFine(){
        float ret = 0;
        for(Product pp :allProd)
            ret+= (pp.wt*pp.tounch/100);
        return ret;
    }
}