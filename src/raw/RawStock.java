/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RawStock.java
 *
 * Created on Jul 27, 2015, 3:07:24 PM
 */

package raw;


import gayakwad.DBConnection;
import java.awt.Frame;
import java.sql.ResultSet;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;



/**
 *
 * @author admin
 */
public class RawStock extends javax.swing.JDialog {

    DBConnection con;
    Vector<RowItem> r_data ;
    Frame parent;
    /** Creates new form RawStock */
    public RawStock(Frame parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        initComponents();
          java.awt.Dimension dim = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-getSize().height/2);

        loadRow();
    }


    private void loadRow(){
  r_data = new Vector<RowItem>();
        try{
        con = new DBConnection();
        ResultSet rs = con.executeQuery("SELECT * FROM raw_stock_mst where qnty>0 order by name,wt");

        while(rs.next()){
            RowItem ri = new RowItem(rs.getString(1), rs.getFloat(2),rs.getFloat(3));
            ri.qnty = rs.getInt(4);
            r_data.add(ri);
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, ""+e, "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        refreshTable();
        jTable1.requestFocus();
        faluty = false;
    }


    private void loadFaultyRow(){
  r_data = new Vector<RowItem>();
        try{
        con = new DBConnection();
        ResultSet rs = con.executeQuery("SELECT name,wt,tounch,qnty FROM faultyraw order by name");

        while(rs.next()){
            RowItem ri = new RowItem(rs.getString(1), rs.getFloat(2),rs.getFloat(3));
            ri.qnty = rs.getInt(4);
            r_data.add(ri);
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, ""+e, "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        refreshTable();
        jTable1.requestFocus();
        faluty = true;
    }

    boolean faluty = false;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPanel1KeyTyped(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24));
        jLabel1.setText("Raw Stock");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addComponent(jLabel1)
                .addContainerGap(217, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton2.setText("Exit (Ctrl+E)");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"12.10", "87.22", null},
                {"8.62", "98.11", null}
            },
            new String [] {
                "Name", "Tounch", "Weight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTable1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton3.setText("Faulty ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Stock");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(30, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jMenu1.setText("Options");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Recycle");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Finish Button
        dispose();;
}//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyTyped
        // jtable key
//        char ch = evt.getKeyChar();
//        try{
//            int no = Integer.parseInt(""+ch);
//            no--;
//            jTable1.setRowSelectionInterval(no, no);
//            jTable1.requestFocus();
//        }catch(Exception e){
//            System.out.println(e);
//        }
}//GEN-LAST:event_jTable1KeyTyped

    private void jPanel1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyTyped
        // main panel key.
        char ch = evt.getKeyChar();
        try{
            int no = Integer.parseInt(""+ch);
            jTable1.setRowSelectionInterval(no, no);
            jTable1.requestFocus();
        }catch(Exception e){
            // System.out.println(e);
        }
    }//GEN-LAST:event_jPanel1KeyTyped

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // Exit
        dispose();
}//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // Recycle
        //debit();
        if(!faluty){
            JOptionPane.showMessageDialog(rootPane, "Please Open Faulty Raw!");
            return;
        }
        recycle();
}//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Faulty.
        loadFaultyRow();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Stock
        loadRow();
    }//GEN-LAST:event_jButton4ActionPerformed


    private void recycle(){
        int[] selected_rows = jTable1.getSelectedRows();
        if(selected_rows==null || selected_rows.length<1) {
            JOptionPane.showMessageDialog(rootPane, "Please Select Rows To Recycle!");
            return;
        }
        System.out.println("Selected:"+selected_rows.length);
        float total_fine_to_recycle=0,total_wt_to_recycle=0;
        for(int i=0;i<selected_rows.length;i++)
        {
            System.out.println("[" + selected_rows[i] + "]");
            RowItem ri = r_data.get(selected_rows[i]);
            System.out.println("["+ri.name+"]["+ri.wt+"]["+ri.tounch+"]["+ri.qnty+"]");
            total_fine_to_recycle += ((ri.wt*ri.qnty)*ri.tounch/100);
            total_wt_to_recycle += ri.wt*ri.qnty;
        }
        //convert to gram..
        total_fine_to_recycle /= 1000;
        total_wt_to_recycle /= 1000;
        System.out.println("Tf:"+total_fine_to_recycle);
        System.out.println("Tw:"+total_wt_to_recycle);
        RecycleSummery rs = new RecycleSummery(parent, true);
        rs.setData(total_wt_to_recycle, total_fine_to_recycle);
        rs.setVisible(true);

        if(rs.final_wt==0 || rs.final_fine==0)
        {
            JOptionPane.showMessageDialog(rootPane, "Stock Not Recycle! Zero Entry");
            return;
        }
        try {
            DBConnection con = new DBConnection();
            String qry = "insert into aj_transations(name,tran_type,amount,dt,invoice_no,comment) values"
                            + "('Faulty Recycle',"+ "'GOLD',"+rs.final_fine+",now(),0,'Faulty Recycle');";
            con.executeUpdate(qry);
            con.executeUpdate("Update aj_gold_in_hand set gold=gold+"+rs.final_fine+";");
            

            for(int i=0;i<selected_rows.length;i++)
            {
                System.out.println("[" + selected_rows[i] + "]");
                RowItem ri = r_data.get(selected_rows[i]);
                con.executeUpdate("delete from faultyraw where name='"+ri.name+"' and wt="+ri.wt+" and qnty="+ri.qnty+" and tounch="+ri.tounch);
            }
            JOptionPane.showMessageDialog(rootPane, "Raw Stock Updated!\n Total Fine Recycle:"+rs.final_fine);
            loadFaultyRow();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, ex);
            return;
        } 
    }

     private void debit(){


        String text= JOptionPane.showInputDialog("Please Enter Quantity To Debit:");
        if(text!=null){
            try{
                int qnty = Integer.parseInt(text);

                if(qnty<1)  return;
                 int index = jTable1.getSelectedRow();
                if(index<0){
                    JOptionPane.showMessageDialog(rootPane, "Please Select A Record");
                    return;
                }
                RowItem ged = r_data.get(index);
                try {
                     String qry = "update raw_stock set qnty=qnty-"+qnty+" where name='"+ged.name+"'";
                            System.out.println(qry);
                            con.executeUpdate(qry);
                    JOptionPane.showMessageDialog(rootPane, "Material Debited!", "Done", JOptionPane.INFORMATION_MESSAGE);
                    loadRow();
                } catch (Exception ex) {
                   JOptionPane.showMessageDialog(rootPane, ex, "Error", JOptionPane.ERROR_MESSAGE);
                   return;
                }

            }catch(Exception e){
                JOptionPane.showMessageDialog(rootPane, "Wrong Entry!","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
        }


       
    }

     private void refreshTable(){
        String[][] data = new String[r_data.size()][];
        for(int i=0;i<data.length;i++)
        {
            data[i] = new String[4];
            RowItem ged = r_data.get(i);
            data[i][0] = ""+ged.name;
            data[i][1] = ""+ged.tounch;
            data[i][2] = ""+ged.wt;
            data[i][3] = ""+ged.qnty;
        }
        
         jTable1.setModel(new javax.swing.table.DefaultTableModel(data,   new String [] {
                "Name","Tounch","Weight","Quantity"
            }) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            boolean[] canEdit = new boolean [] {
                false, false,false,false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });


    }

     

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RawStock dialog = new RawStock(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
