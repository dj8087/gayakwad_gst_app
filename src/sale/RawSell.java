/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RawSell.java
 *
 * Created on Aug 16, 2015, 11:51:41 AM
 */

package sale;

import gayakwad.DBConnection;
import java.sql.ResultSet;
import java.sql.RowId;
import com.implidea.DecimalFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import raw.RowItem;

/**
 *
 * @author Shree
 */
public class RawSell extends javax.swing.JDialog {
CustomerObj[] co;
Vector<RowItem> row;

    /** Creates new form RawSell */
    public RawSell(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();


            java.awt.Dimension dim = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
            this.setLocation(dim.width/2-this.getSize().width/2, 0);



        try{
        //load Row Itmes..
           DBConnection con = new DBConnection();
           ResultSet rs;
           loadAllAllCusts();

        rs = con.executeQuery("Select count(*) from raw_stock_mst where qnty>0");
        rs.next();
        int count = rs.getInt(1);
        count++;

        row = new Vector<RowItem>();
        rs = con.executeQuery("select * from raw_stock_mst where qnty>0");
        while(rs.next()){
            RowItem ri = new RowItem(rs.getString(1),rs.getFloat(2),rs.getFloat(3));
            ri.qnty = rs.getInt(4);
           // System.out.println("DB String["+ri.toDBString()+"]");
            row.add(ri);
        }



        RowItem[] data = new RowItem[row.size()];
        for(int i=0;i<data.length;i++)
            data[i] =row.get(i);


        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(data));
        jComboBox1.setSelectedIndex(0);
        jComboBox1ItemStateChanged(null);
//        jLabel8.setText(""+row.get(0).wt+" mg");

        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(parent, e);
        }
    }


    private void loadAllAllCusts() throws Exception{
         DBConnection con = new DBConnection();


            ResultSet rs = con.executeQuery("SELECT count(*) FROM customer_mst;");
            rs.next();
            int count = rs.getInt(1);
            co = new CustomerObj[count];
            rs = con.executeQuery("SELECT * FROM customer_mst;");
            int i=0;
            while(rs.next()){
                int cid = rs.getInt(1);
                String name = rs.getString(2);
                String address = rs.getString(3);
                String contact = rs.getString(4);
                float base_tounch = rs.getFloat(5);
                float base_labor = rs.getFloat(6);
                float gold_ac = rs.getFloat(7);
                float money_ac = rs.getFloat(8);
                co[i] = new CustomerObj(cid, name, address, contact, base_tounch, base_labor, gold_ac, money_ac);
                i++;
            }

            jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(co));
            jComboBox2.setSelectedIndex(0);
            jComboBox2ItemStateChanged(null);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Customer Name:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jComboBox2KeyTyped(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Row Material:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jComboBox1KeyTyped(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Quantity:");

        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Unit Weight");

        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Tounch");

        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField6KeyTyped(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Labor");

        jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField7KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, 437, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24));
        jLabel1.setText("Sell Raw Stock");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addComponent(jLabel1)
                .addContainerGap(215, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Weight", "Tounch", "Quantity", "Fine", "Total Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Finish (Ctrl+F)");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Exit (Ctrl+E)");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Total Fine:");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("0.0 gm");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Total Labor:");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Rs. 0");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Invoice No.");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))))
                .addGap(11, 11, 11))
        );

        jMenu2.setText("Options");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Finish");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Delete");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // Item Changed

//        int index = jComboBox1.getSelectedIndex();
//        jLabel8.setText(""+row.get(index).wt+" mg");

        int index = jComboBox1.getSelectedIndex();

        RowItem ri = row.get(index);


        jTextField4.setText(""+ri.qnty);
        jTextField5.setText(""+ri.wt);
        jTextField6.setText(""+ri.tounch);


        
}//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyTyped
        // jcombo key type
        char key = evt.getKeyChar();
        if(key=='\n') {
            jTextField4.requestFocus();
        }
}//GEN-LAST:event_jComboBox1KeyTyped

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        // Qnty
        char key = evt.getKeyChar();
        if(key=='\n') {
            //addToTable();
            //reset();
            jTextField5.requestFocus();
        }
}//GEN-LAST:event_jTextField4KeyTyped

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped
        // TODO add your handling code here:
         char key = evt.getKeyChar();
        if(key=='\n') {
            //addToTable();
            //reset();
            jTextField6.requestFocus();
        }
    }//GEN-LAST:event_jTextField5KeyTyped

    private void jTextField6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyTyped
        // TODO add your handling code here:
         char key = evt.getKeyChar();
        if(key=='\n') {
            //addToTable();
            //reset();
            jTextField7.requestFocus();
            //save..

            

        }
    }//GEN-LAST:event_jTextField6KeyTyped

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // c name combo item
//        CustomerObj cust_obj = (CustomerObj) jComboBox1.getSelectedItem();
        //jTextField2.setText(""+cust_obj.base_labor);
}//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox2KeyTyped
        // c name key
        if(evt.getKeyChar()!='\n')  return;
        //jComboBox1.requestFocus();
        jTextField1.requestFocus();
    }//GEN-LAST:event_jComboBox2KeyTyped

    private void jTextField7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyTyped
        // TODO add your handling code here:

        if(evt.getKeyChar()!='\n')  return;

        //add to table...
        addToTable();

        

    }//GEN-LAST:event_jTextField7KeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // finish..
        save();
}//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // exit
        dispose();
}//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // Save
        save();
}//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // Exit
        dispose();
}//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // invoice no
        if(evt.getKeyChar()!='\n')  return;


        //cust according to invoice no...

         try{
           DBConnection con = new DBConnection();

        //----------------------------------------------
                
                String inv_str = jTextField1.getText();
                if(inv_str.length()>0){
                    try{
                         loadAllAllCusts();
                        String qry = "SELECT cid FROM sell_invoice_not_update where invoice_no="+inv_str;
                        System.out.println(qry);
                        ResultSet rs = con.executeQuery(qry);
                        if(rs.next()){
                            int custId = rs.getInt(1);
                            CustomerObj[] only = new CustomerObj[1];
                            for(CustomerObj oo : co){
                                if(oo.cid==custId){
                                    only[0] = oo;
                                    break;
                                }
                            }
                            co = only;
                            jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(only));
                            jComboBox2.setSelectedIndex(0);
                            jComboBox2ItemStateChanged(null);
                            jComboBox1.requestFocus();
                        }else{
                            JOptionPane.showMessageDialog(rootPane, "Incorrect Invoice Number "+inv_str);
                            return;
                        }
                    }catch(Exception e){
                         JOptionPane.showMessageDialog(rootPane, "Incorrect Number Entry");
                         return;
                    }


                 //   row_id++;
                }
                else{
                    loadAllAllCusts();
                    jComboBox2.requestFocus();
                }
            }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, e);
        }



        //-------------------------------s



        //jComboBox1.requestFocus();
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // delete menu..

        int rIndex = jTable1.getSelectedRow();
        if(rIndex<0){
            JOptionPane.showMessageDialog(rootPane, "Please Select A Record To Delete!");
            return;
        }
        int op = JOptionPane.showConfirmDialog(rootPane, "Do you want Delete?");
          /*
           * 0-Yes
           * 1-No
           * 2-Cacle
           */
        if(op==0) {
            //yes
            rawSell.remove(rawSell.size()-1-rIndex);
            refreshTable();
        }else if(op==1){

        }else{

        }

    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RawSell dialog = new RawSell(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables


   public static class RawSellItem{
        final String name;
        final float wt,tounch,labor,fine,cost;
        final int qnty;
        final RowItem original;
        public RawSellItem(String name, float wt, float tounch, int qnty,float labor,RowItem ori) {
            this.name = name;
            this.wt = wt;
            this.tounch = tounch;
            this.qnty = qnty;
            this.labor=labor;
            this.fine = ((wt)*(tounch/100))*qnty;
            this.cost = qnty*labor;
            this.original=ori;
        }

        @Override
        public String toString() {
            return name+":"+wt+":"+tounch;
        }


        
    }

   private void save(){
            CustomerObj c_c  =  (CustomerObj) jComboBox2.getSelectedItem();
            //int index = jComboBox1.getSelectedIndex();


            try {

                DBConnection con = new DBConnection();
                boolean createNewInvoice = true;
                int invoice_no = 0;
                int row_id = 0;
                String inv_str = jTextField1.getText();
                if(inv_str.length()>0){
                    try{
                        String qry = "SELECT max(row_id) FROM sell_invoice group by invoice_no having invoice_no="+inv_str;
                        System.out.println(qry);
                            ResultSet rs = con.executeQuery(qry);
                            if(rs.next()){
                                row_id = rs.getInt(1);
                                invoice_no = Integer.parseInt(inv_str);
                                createNewInvoice=false;
                            }else{
                                JOptionPane.showMessageDialog(rootPane, "Incorrect Invoice Number");
                                return;
                            }
                    }catch(Exception e){
                         JOptionPane.showMessageDialog(rootPane, "Incorrect Invoice Number");
                         return;
                    }
                    row_id++;
                }else{
                    row_id = 0;
                    //SELECT max(invoice_no) as ex FROM sell_invoice;
                       ResultSet rs = con.executeQuery("select * from next_invoice_no;");
                        if(rs.next()){
                            invoice_no = rs.getInt(1);
                        }else{
                           invoice_no=0;
                        }
                       //invoice_no++;
                       row_id++;
                }

                System.out.println("IS New Invoice["+createNewInvoice+"]:"+invoice_no+":"+row_id);
                //if(invoice_no>=0)
                //    return;

               if(row_id==1){
                //new invoice..
                   System.out.println("New invoice, Saving old Balance!");
                   con.executeUpdate("insert into sell_invoice_cust_old_bal values("+invoice_no+","+c_c.cid+","+c_c.gold_ac+","+c_c.money_ac+")");
                   con.executeUpdate("insert into sell_invoice_date values("+invoice_no+",now())");
                 }

                

                //update to

                for(RawSellItem rsi : rawSell){
                    String qry = "Update raw_stock_mst set qnty=qnty-"+rsi.qnty+" where name='"+rsi.original.name+"' and wt="+rsi.original.wt+" and tounch="+rsi.original.tounch;
                    //System.out.println(qry);
                    con.executeUpdate("insert into sell_invoice values("
                                        +invoice_no+","
                                        +row_id+","
                                        + "'--',"
                                        + "'"+rsi.original.name+"',"
                                        +rsi.wt+","
                                        +rsi.tounch+","
                                        +rsi.labor+","
                                        +rsi.qnty+","
                                        +c_c.cid+")");
                    row_id++;
                    con.executeUpdate(qry);
                    
                }

                 if(total_fine!=0)
                    {
                        String qry = "insert into aj_transations(name,tran_type,amount,dt,invoice_no,comment) values('"+c_c.name+"','GOLD',-"+total_fine/1000+",now(),"+invoice_no+",'Raw Material Sell');";
                       // System.out.println(qry);
                        con.executeUpdate(qry);
                    }
                    if(total_labor!=0)
                    {
                        String qry = "insert into aj_transations(name,tran_type,amount,dt,invoice_no,comment) values('"+c_c.name+"','MONEY',-"+total_labor+",now(),"+invoice_no+",'Raw Material Sell');";
                        //System.out.println(qry);
                        con.executeUpdate(qry);
                    }
                con.executeUpdate("Update customer_mst set gold_ac=gold_ac-"+(total_fine/1000)+" , money_ac=money_ac-"+total_labor+" where cid="+c_c.cid);
                if(row_id==1)
                {
                     JOptionPane.showMessageDialog(rootPane, "Sell Invoice "+invoice_no+" Created!");
                }
                else
                    JOptionPane.showMessageDialog(rootPane, "Sell Invoice "+invoice_no+" Updated!");
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, ex);
            }
    }
    Vector<RawSellItem> rawSell = new Vector<RawSellItem>();
    DecimalFormat df = new DecimalFormat("#####.###");
    private void addToTable() {
        RowItem ori = (RowItem) jComboBox1.getSelectedItem();
            String name =  ori.name;
            if(jTextField4.getText().length()<1){
                JOptionPane.showMessageDialog(rootPane, "Please Enter Quantity");
                return;
            }
            if(jTextField5.getText().length()<1){
                JOptionPane.showMessageDialog(rootPane, "Please Enter Weight");
                return;
            }
            if(jTextField6.getText().length()<1){
                JOptionPane.showMessageDialog(rootPane, "Please Enter Tounch");
                return;
            }
            if(jTextField7.getText().length()<1){
                JOptionPane.showMessageDialog(rootPane, "Please Enter Labor");
                return;
            }
            try{
                float sell_wt = Float.parseFloat(jTextField5.getText());
                float labor = Float.parseFloat(jTextField7.getText());
                float tnch = Float.parseFloat(jTextField6.getText());
                int qnty = Integer.parseInt(jTextField4.getText());
                rawSell.add(new RawSellItem(name, sell_wt, tnch, qnty, labor,ori));
            }catch(Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "Wrong Entry!");
            }
          
            refreshTable();
        jComboBox1.requestFocus();

            
    }



          float total_fine = 0;
            float total_labor = 0;


    private void refreshTable(){
           total_fine = 0;
            total_labor = 0;
            String[][] data = new String[rawSell.size()][];
            for(int i=data.length-1;i>=0;i--){
                data[i] = new String[6];
                RawSellItem rsi = rawSell.get(data.length-1-i);
                data[i][0] = rsi.name;
                data[i][1] = ""+rsi.wt;
                data[i][2] = ""+rsi.tounch;
                data[i][3] = ""+rsi.qnty;
                data[i][4] = ""+df.format(rsi.fine/1000);
                data[i][5] = ""+df.format(rsi.cost);
                total_fine+= rsi.fine;
                total_labor+=rsi.cost;
            }

            jLabel11.setText(df.format(total_fine/1000)+" gm");
            jLabel13.setText("Rs. "+df.format(total_labor)+"");


                jTable1.setModel(new javax.swing.table.DefaultTableModel(data,
            new String [] {
                "Name", "Weight", "Tounch", "Quantity", "Fine", "Total Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

    }
}
