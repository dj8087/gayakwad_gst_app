/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Saleing.java
 *
 * Created on Aug 3, 2015, 12:42:22 AM
 */

package sale;

import gayakwad.AllConstants;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import gayakwad.invoices.SellInvoice;
import gayakwad.DBConnection;
import gayakwad.invoices.AllInvoices;
import java.sql.ResultSet;
import com.implidea.DecimalFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperPrintManager;
import stock.Product;
import javax.swing.JCheckBox;

/**
 *
 * @author admin
 */
public class Saleing extends javax.swing.JFrame {

    CustomerObj[] co;
    JFrame parent;
    /** Creates new form Saleing */
    public Saleing(JFrame p) {
        try {
            parent = p;
            initComponents();
          java.awt.Dimension dim = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
            this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getHeight()/2);

            loadAllAllCust();
           
        } catch (Exception ex) {
            Logger.getLogger(Saleing.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    

    private void loadAllAllCust() throws Exception
    {
         DBConnection con = new DBConnection();
            ResultSet rs = con.executeQuery("SELECT count(*) FROM customer_mst;");
            rs.next();
            int count = rs.getInt(1);
            co = new CustomerObj[count];
            rs = con.executeQuery("SELECT * FROM customer_mst order by name;");
            int i=0;
            while(rs.next()){
                int cid = rs.getInt(1);
                String name = rs.getString(2);
                String address = rs.getString(3);
                String contact = rs.getString(4);
                float base_tounch = rs.getFloat(5);
                float base_labor = rs.getFloat(6);
                float gold_ac = rs.getFloat(7);
                float money_ac = rs.getFloat(8);
                co[i] = new CustomerObj(cid, name, address, contact, base_tounch, base_labor, gold_ac, money_ac);
                i++;
            }

            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(co));
            jComboBox1.setSelectedIndex(0);
            jComboBox1ItemStateChanged(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24));
        jLabel1.setText("****Sale****");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(292, 292, 292)
                .addComponent(jLabel1)
                .addContainerGap(324, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Customer Name:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jComboBox1KeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Update Old Invoice");

        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });

        jButton3.setText("Last Invoice (Ctrl+L)");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(89, 89, 89)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(131, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Product Code");

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Total Weight (g):");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Labor (Rs.):");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barcode", "Product Name", "Weight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("0.0");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("0.0");

        jButton1.setText("Reset (Ctrl+R)");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Finish (Ctrl+F)");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Total Fine (g):");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("0.0");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Base Labor");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Base Tounch");

        jTextField1.setText("0.0");
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jTextField2.setText("0.0");
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("0");

        jCheckBox1.setBackground(new java.awt.Color(255, 102, 102));
        jCheckBox1.setText("Fix This");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                                .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(45, 45, 45)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(62, 62, 62)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jCheckBox1)
                                            .addGap(84, 84, 84)
                                            .addComponent(jLabel13)))))
                            .addContainerGap())
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel8)
                            .addGap(123, 123, 123)
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel9)
                            .addGap(70, 70, 70)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCheckBox1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(42, 42, 42)))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addGap(9, 9, 9)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );

        jMenu1.setText("Options");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Finish");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Reset");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Delete");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // c name combo item
        CustomerObj cust_obj = (CustomerObj) jComboBox1.getSelectedItem();
        jTextField1.setText(""+cust_obj.base_tounch);
        jTextField2.setText(""+cust_obj.base_labor);
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyTyped
        // c name key
        if(evt.getKeyChar()!='\n')  return;
        jTextField3.requestFocus();
        
    }//GEN-LAST:event_jComboBox1KeyTyped

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // tounch
        if(evt.getKeyChar()!='\n')  return;
        jTextField2.requestFocus();
        
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // labor
          if(evt.getKeyChar()!='\n')  return;
          String txt = jTextField3.getText();
          if(txt.length()<1){
              JOptionPane.showMessageDialog(rootPane, "Invalid Barcode");
              return;
          }
          addToTable(txt);
          jTextField3.setText("");
          jTextField3.requestFocus();
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        // barcode
          if(evt.getKeyChar()!='\n')  return;


          String code = jTextField3.getText();
          if(code.length()<1){
              JOptionPane.showMessageDialog(parent, "Please Enter Product Code");
              return;
          }

          //check already in sell table...
          boolean found = false;
          for(Product pp : product)
              if(found=pp.barcode.equals(code))
                  break;

          if(found){
              JOptionPane.showMessageDialog(parent, "Already In Selling Process!");
              return;
          }
          
          if(jCheckBox1.isSelected()){
              addToTable(code);
              jTextField3.setText("");
            jTextField3.requestFocus();
            return;
        }
          
        jTextField1.requestFocus();
          
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Finish Btn
        save();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // Finish Menu
        save();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // Reset Menu
        reset();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Reset Btn
        reset();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // exit
        dispose();
        parent.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // Delete Entry..

        int rowIndex = jTable1.getSelectedRow();
        if(rowIndex<0){
            JOptionPane.showMessageDialog(parent, "Please Select Record To Delete!");
            return;
        }
          int op = JOptionPane.showConfirmDialog(rootPane, "Do you want Delete?");
          /*
            * 0-Yes
            * 1-No
            * 2-Cacle
            */
          if(op==0)
           {
                //yes
              product.remove(product.size()-1-rowIndex);
              refreshTable();
           }else if(op==1){

           }else{

           }

          jTextField3.requestFocus();

    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //table dbl click
        if(evt.getClickCount()<2)   return;
        int rowIndex = jTable1.getSelectedRow();
        if(rowIndex<0){
            JOptionPane.showMessageDialog(parent, "Please Select Record To Delete!");
            return;
        }
        String code = (String) jTable1.getModel().getValueAt(rowIndex, 0);
        new ProductDetails(this, true, code).setVisible(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        // Update invoice..
          if(evt.getKeyChar()!='\n')  return;

          try{
           DBConnection con = new DBConnection();

        //----------------------------------------------
                int invoice_no = 0;
               // int row_id = 0;
                String inv_str = jTextField4.getText();
                if(inv_str.length()>0){
                    try{
                       loadAllAllCust();
                        String qry = "SELECT cid FROM sell_invoice_not_update where invoice_no="+inv_str;
                        System.out.println(qry);
                        ResultSet rs = con.executeQuery(qry);
                        if(rs.next()){
                            int custId = rs.getInt(1);
                            CustomerObj[] only = new CustomerObj[1];
                            for(CustomerObj oo : co){
                                if(oo.cid==custId){
                                    only[0] = oo;
                                    break;
                                }
                            }
                            co = only;
                            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(only));
                            jComboBox1.setSelectedIndex(0);
                            jComboBox1ItemStateChanged(null);
                            jTextField3.requestFocus();
                        }else{
                            JOptionPane.showMessageDialog(rootPane, "Incorrect Invoice Number "+inv_str);
                            return;
                        }
                    }catch(Exception e){
                         JOptionPane.showMessageDialog(rootPane, "Incorrect Invoice Number2");
                         return;
                    }


                 //   row_id++;
                }
                else{
                    loadAllAllCust();
                    jComboBox1.requestFocus();
                }
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_jTextField4KeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Last Invoice..

        AllInvoices ai = new AllInvoices(parent, true);
        ai.loadInvoicesForCustomer(((CustomerObj) jComboBox1.getSelectedItem()).cid);
        ai.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void reset(){
        while(product.size()>0){
            product.remove(0);
        }
        jComboBox1.requestFocus();
        refreshTable();
    }


    private float last_g_bal=0,last_m_bal=0;
    private void save() {
       try{
       
        CustomerObj cust_obj = (CustomerObj) jComboBox1.getSelectedItem();

        int cid = cust_obj.cid;
      //  int nextInvoiceNo=1;
      //  int nextRowId = 1;
        DBConnection con = new DBConnection();

        //----------------------------------------------
                int invoice_no = 0;
                int row_id = 0;
                String inv_str = jTextField4.getText();
                if(inv_str.length()>0){
                    try{
                        String qry = "SELECT max(row_id) FROM sell_invoice group by invoice_no having invoice_no="+inv_str;
                        System.out.println(qry);
                            ResultSet rs = con.executeQuery(qry);
                            if(rs.next()){
                                row_id = rs.getInt(1);
                                invoice_no = Integer.parseInt(inv_str);
                            }else{
                                JOptionPane.showMessageDialog(rootPane, "Incorrect Invoice Number");
                                return;
                            }
                    }catch(Exception e){
                         JOptionPane.showMessageDialog(rootPane, "Incorrect Invoice Number");
                         return;
                    }


                    row_id++;
                }else{
                    row_id = 0;
                    //SELECT max(invoice_no) as ex FROM sell_invoice;
                       ResultSet rs = con.executeQuery("select * from next_invoice_no;");
                        if(rs.next()){
                            invoice_no = rs.getInt(1);
                        }else{
                           invoice_no=0;
                        }
                       //invoice_no++;
                       row_id++;
                }

                System.out.println("New Invoice:"+invoice_no+":"+row_id);
                //if(invoice_no>=0)
                //    return;



        //--------------------------------------------------

 

        //update invoice..
//        try{
//            ResultSet rs  = con.executeQuery("SELECT max(invoice_no) FROM sell_invoice s;");
//            if(rs.next()){
//                nextInvoiceNo = rs.getInt(1);
//            }
//            nextInvoiceNo++;
//       }catch(Exception e){
//        e.printStackTrace();
//       }


        
           
           //credit...
           float gold_credit = 0;
           float money_credit = 0;
           String conversion_comment_G = "";
           String conversion_comment_M = "";
                last_g_bal = cust_obj.gold_ac;
                last_m_bal = cust_obj.money_ac;
                CreditAtSell dialog = new CreditAtSell(new javax.swing.JFrame(), true,cust_obj,total_fine,total_labor);
                dialog.setVisible(true); 
                if(dialog.FINISHED){
                    gold_credit =(dialog.total_fine_actual_recv);
                    money_credit = (dialog.total_cash_actual_recv);
                    System.out.println("["+(money_credit)+"]["+gold_credit+"]");
                    System.out.println("["+(dialog.total_cash_converted)+"]["+dialog.total_fine_converted+"]");
                    System.out.println("["+(dialog.total_G_TO_M)+"]["+dialog.total_M_TO_G+"]");
                    System.out.println("["+(cust_obj.money_ac)+"]["+cust_obj.gold_ac+"]");

                    /*
                     * M      G
                    [17500.0][7.0]
                    [5000.0][3.0]
                    [7500.0][2.0]
                    [-5050.0][-5.54]
                     * 
                     * [M1][G1]
                     * [M2][G2]
                     * [M3][G4]
                     * [Acc_M][Acc_G]
                     *
                     * Account payment=> M1+M2-M3
                     * Account payment=> G1+G2-G3
                     *
                     *
                    3.0 gm Fine Convert-> +Rs.7500.0/- Jama
                    Rs.5000.0/- Convert-> 2.0 gm fine Jama
                     */

                    if(dialog.total_G_TO_M>0)
                        conversion_comment_G=""+dialog.total_fine_converted+" gm Fine Convert-> Rs."+dialog.total_G_TO_M+"/- Jama";
                    if(dialog.total_M_TO_G>0)
                        conversion_comment_M="Rs."+dialog.total_cash_converted+"/- Convert-> "+dialog.total_M_TO_G+" gm fine Jama";

                    System.out.println(conversion_comment_G);
                    System.out.println(conversion_comment_M);

                  //  if(cust_obj!=null)
                   //     return;
                }else{
                    return;
                }


                




        //con.executeUpdate("update customer_mst set gold_ac=gold_ac-"+total_fine+", money_ac=money_ac-"+total_labor+" where cid="+cid);
        con.executeUpdate("update customer_mst set gold_ac="+cust_obj.gold_ac+", money_ac="+cust_obj.money_ac+" where cid="+cid);


        //if gold or money != 0 Update trasaction..
           {
                    if(total_fine!=0)
                    {
                        String qry = "insert into aj_transations(name,tran_type,amount,dt,invoice_no,comment) values('"+cust_obj.name+"','GOLD',-"+total_fine+",now(),"+invoice_no+",'Thusi Sell');";
                       // System.out.println(qry);
                        con.executeUpdate(qry);
                    }
                    if(total_labor!=0)
                    {
                        String qry = "insert into aj_transations(name,tran_type,amount,dt,invoice_no,comment) values('"+cust_obj.name+"','MONEY',-"+total_labor+",now(),"+invoice_no+",'Thusi Sell');";
                        //System.out.println(qry);
                        con.executeUpdate(qry);
                    }
           }
        
        //update accounts - inhand and transaction..
           {
                Date d = new Date();
                ResultSet rs = con.executeQuery("select dt from aj_gold_in_hand order by dt desc limit 1;");
                if(rs.next())
                    d = rs.getDate(1);
                String qry = "update aj_gold_in_hand set gold=gold+"+gold_credit+",money=money+"+money_credit+" where dt = '"+d+"'";
            //    System.out.println(qry);
                con.executeUpdate(qry);

                if(gold_credit!=0){
                    qry = "insert into aj_transations(name,tran_type,amount,dt,invoice_no,comment) values('"+cust_obj.name+"','GOLD',"+gold_credit+",now(),"+invoice_no+",'At Sell Time "+conversion_comment_M+"');";
                    //System.out.println(qry);
                    con.executeUpdate(qry);
               }

                if(money_credit!=0){
                    qry = "insert into aj_transations(name,tran_type,amount,dt,invoice_no,comment) values('"+cust_obj.name+"','MONEY',"+money_credit+",now(),"+invoice_no+",'At Sell Time "+conversion_comment_G+"');";
                  //  System.out.println(qry);
                    con.executeUpdate(qry);
               }
           }
        //------------
           if(row_id==1){
               //new invoice..
               System.out.println("New invoice, Saving old Balance!");
               con.executeUpdate("insert into sell_invoice_cust_old_bal values("+invoice_no+","+cust_obj.cid+","+last_g_bal+","+last_m_bal+")");
               con.executeUpdate("insert into sell_invoice_date values("+invoice_no+",now())");
           }

        for(Product p : product){
            con.executeUpdate("insert into selled_stock_mst values('"+p.barcode+"','"+p.name+"',"+p.wt+",'"+p.details+"',"+cid+")");
            con.executeUpdate("insert into sell_invoice values("+invoice_no+","+row_id+",'"+p.barcode+"','"+p.name+"',"+p.wt+","+p.tounch+","+p.labor+",1,"+p.cid+")");
            row_id++;
            con.executeUpdate("delete from stock_mst where barcode='"+p.barcode+"'");
        }
        con.executeUpdate("update customer_mst set gold_ac="+cust_obj.gold_ac+", money_ac="+cust_obj.money_ac+" where cid="+cid);
        JOptionPane.showMessageDialog(rootPane, "Sell Updated! Invoice No:  "+invoice_no);
        
        
        
          int op = JOptionPane.showConfirmDialog(rootPane, "Print Invoice?");
          /*
            * 0-Yes
            * 1-No
            * 2-Cacle
            */
          if(op==0)
           {
                SellInvoice si = SellInvoice.loadInvoiceFor(invoice_no);
                AllInvoices.print(si,(CustomerObj) jComboBox1.getSelectedItem());
           }



        reset();
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }

    private void print1(SellInvoice si){
        try {
            CustomerObj cust_obj = (CustomerObj) jComboBox1.getSelectedItem();
            HashMap hm = new HashMap();
            hm.put("cname", si.cname);
            hm.put("invoice_no", ""+si.invoice_no);
            hm.put("t_g", df_gold.format(si.getTotalFine()));
            hm.put("t_p", df_money.format(si.totalLabor()));
            hm.put("d_g", df_gold.format(si.old_gold*(-1)));
            hm.put("d_p", df_money.format(si.old_money*(-1)));
            hm.put("p_g", "-"+df_gold.format(si.jamaGold));
            hm.put("p_p", "-"+df_money.format(si.jamaMoney));
            hm.put("b_g", df_gold.format(cust_obj.gold_ac*(-1)));
            hm.put("b_p", df_money.format(cust_obj.money_ac*(-1)));
            // Generate jasper print
            JasperPrint jprint = (JasperPrint) JasperFillManager.fillReport(AllConstants.jasperFileName, hm, new DBConnection().getConnection());
            //JasperPrint jprint = (JasperPrint) JasperFillManager.fillReport(jasperFileName, hm);
            // Export pdf file
            //JasperExportManager.exportReportToPdfFile(jprint, pdfFileName);
            JasperPrintManager.printPages(jprint, 0,jprint.getPages().size()-1, true);
            //dispose();
            System.out.println("Printing!");
            // JasperViewer.viewReport(jprint);
             System.out.println("Done!");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, ex);
            //Logger.getLogger(AllInvoices.class.getName()).log(Level.SEVERE, null, ex);
        }
    }



    Vector<Product> product = new Vector<Product>();
    
    private void addToTable(String txt){
        try {
            DBConnection con = new DBConnection();
            ResultSet rs = con.executeQuery("SELECT * FROM stock_mst where barcode="+txt);
            if(rs.next()){
                int barcode = rs.getInt(1);
                String name = rs.getString(2);
                float wt = rs.getFloat(3);
                String details = rs.getString(4);
                String bT = jTextField1.getText();
                String bL = jTextField2.getText();

                float base_T = Float.parseFloat(bT);
                float base_L = Float.parseFloat(bL);
                Product pp = new Product(""+barcode, name, wt, details); 
                pp.labor=base_L;
                pp.tounch=base_T;
                pp.cid = ((CustomerObj) jComboBox1.getSelectedItem()).cid;
                product.add(pp);
                
                refreshTable();
            }else{
                JOptionPane.showMessageDialog(rootPane, "Invalid Barcode");
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(Saleing.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

     DecimalFormat df_gold = new DecimalFormat("########.###");
    DecimalFormat df_money = new DecimalFormat("########");
    
    private void refreshTable(){
           String[][] data = new String[product.size()][];
  //              Product[] prd = new Product[product.size()];
                for(int i=0;i<data.length;i++){
                    Product p = product.get(i);
                    data[data.length-1-i] = new String[]{""+p.barcode,p.name,""+df_gold.format(p.wt)};
                }
                   jLabel13.setText(""+data.length);
                 jTable1.setModel(new javax.swing.table.DefaultTableModel(data,
                    new String [] {
                        "Barcode", "Product Name", "Weight"
                    }
                ) {
                    Class[] types = new Class [] {
                        java.lang.String.class, java.lang.String.class, java.lang.String.class
                    };
                    boolean[] canEdit = new boolean [] {
                        false, false, false
                    };

                    public Class getColumnClass(int columnIndex) {
                        return types [columnIndex];
                    }

                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit [columnIndex];
                    }
                });

                
               total_wt=0;
               total_fine=0;
               total_labor=0;
                for(Product p : product){
                    total_wt+=p.wt;
                    total_fine+= (p.wt)*(p.tounch/100);
                    total_labor+=p.labor;
                }

                //total_wt = total_wt;
                //total_fine = total_fine;
                jLabel8.setText(""+df_gold.format(total_wt));
                jLabel11.setText(""+df_gold.format(total_fine));
                jLabel9.setText(""+df_money.format(total_labor));
    }
     float total_wt=0,total_fine=0,total_labor=0;
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new Saleing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

}
